package components

import (
	"ericarthurc.com/internal/model"
	"ericarthurc.com/internal/state"
	"fmt"
)

templ PostContainer(featuredPosts []model.Post, nonFeaturedPosts []model.Post, showNonFeatured bool) {
	if len(featuredPosts) > 0 {
		<div class="post-list-featured">
			<h4>Featured Posts</h4>
			<ul class="post-list">
				for _, p := range featuredPosts {
					@PostListing(p)
				}
			</ul>
		</div>
	}
	if showNonFeatured {
		if len(nonFeaturedPosts) > 0 {
			<div class="post-list-non-featured">
				<h4>Posts</h4>
				<ul class="post-list">
					for _, p := range nonFeaturedPosts {
						@PostListing(p)
					}
				</ul>
			</div>
		}
	}
}

templ PostListing(post model.Post) {
	<li class={ "post-listing", templ.KV("featured", post.Featured) }>
		<div class="post-listing-header" data-sveltekit-preload-data="false">
			<a class="post-listing-anchor" href={ templ.URL(fmt.Sprintf("/blog/%s", post.Slug)) }>
				<p class="post-listing-title">
					{ post.Title }
				</p>
			</a>
			<div class="post-listing-info-box">
				<p class="post-listing-date">
					{ post.Date.Format("January 2, 2006") }
				</p>
				// {#if browser}
				// 	<span class="post-listing-views-suffix">&nbsp;&nbsp;Views:&nbsp;</span>
				// 	<span class="post-listing-views">{views}</span>
				// {/if}
			</div>
			if post.Featured {
				<p class="post-listing-snippet">{ post.Snippet }</p>
			}
		</div>
		<div class="post-listing-categories">
			for _, c := range post.Categories {
				<span class="post-listing-category">{ c }</span>
			}
		</div>
		if len(post.Skills) > 0 {
			<div class="post-listing-skills">
				for _, s := range post.Skills {
					@templ.Raw(state.SkillsMap[s])
				}
			</div>
		}
	</li>
}
